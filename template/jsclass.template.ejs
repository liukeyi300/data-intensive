/**
 * This file is generated by data-enhancer
 * The code is all auto-generated and carefully modify it
 */
import NotNull from 'data-enhancer';
<% for (let i = 0; i < childMap.length; i ++) { %>import <%= childMap[i].key %> from './<%=childMap[i].key %>';
<% } %>

export default class {
    constructor (obj = {}) {
        const {
            <% for (let i = 0; i < map.length; i ++) { %><%= map[i].key %>,
            <% } %><% for (let i = 0; i < childMap.length; i ++) { %><%= childMap[i].key %>,
            <% } %>
        } = obj;

        <% for (let i = 0; i < map.length; i ++) { %>this._<%= map[i].key %> = <%= map[i].key %>;
        <% } %><% for (let i = 0; i < childMap.length; i ++) { %>this._<%= childMap[i].key %> = <%= childMap[i].key %>;
        <% } %>
    }

    <% for (let i = 0; i < map.length; i ++ ) { %>
    @NotNull(<%- map[i].value %>)
    get <%= map[i].key %>() { return this._<%= map[i].key %>; }
    set <%= map[i].key %> (value) { this._<%= map[i].key %> = value; }
    <% } %><% for (let i = 0; i < childMap.length; i ++ ) { %>
    @NotNull(new <%= childMap[i].key %>())
    get <%= childMap[i].key %>() { return this._<%= childMap[i].key %>; }
    set <%= childMap[i].key %> (value) { this._<%= childMap[i].key %> = value; }
    <% } %>
}
